{
    "translation_version": {
        "message": "1"
    },

     "noticeTitle": {
        "message": "Notice"
    },
    "close": {
        "message": "Close"
    },
 
    "port_title": {
        "message": "Port",
        "description": "Tooltip displayed during mouseover on port select box"
    },
    "baud_title": {
        "message": "Bitrate",
        "description": "Tooltip displayed during mouseover on baud select box"
    },
    "connect": {
        "message": "Connect",
        "description": "Text displayed on the primary connect button"
    },
    "connecting": {
        "message": "Connecting"
    },
    "disconnect": {
        "message": "Disconnect"
    },
    "auto_connect_enabled": {
        "message": "Auto-Connect: Enabled - Configurator automatically tries to connect when new serial port is detected",
        "description": "Tooltip displayed during mouseover on auto_connect checkbox while checked"
    },
    "auto_connect_disabled": {
        "message": "Auto-Connect: Disabled - User needs to select the correct serial port and click \"Connect\" button on its own",
        "description": "Tooltip displayed during mouseover on auto_connect checkbox while unchecked"
    },

    "tab_TX": {
        "message": "TX Module",
        "description": "Tab name"
    },
    "tab_RX": {
        "message": "RX Module",
        "description": "Tab name"
    },
    "tab_signal_monitor": {
        "message": "Signal Monitor",
        "description": "Tab name"
    },
    "tab_spectrum_analyzer": {
        "message": "Spectrum Analyzer",
        "description": "Tab name"
    },
    "tab_troubleshooting": {
        "message": "Troubleshooting",
        "description": "Tab name"
    },
    "tab_about": {
        "message": "About",
        "description": "Tab name"
    },

    "startup_info_message": {
        "message": "Running - OS: <strong>$1</strong>, Chrome: <strong>$2</strong>, Configurator: <strong>$3</strong>",
        "description": "Info message printed on configurator startup running (Operating system, chrome version, configurator version)"
    },
    "checkForConfiguratorUnstableVersions": {
        "message": "Show update notifications for unstable versions of the configurator"
    },
    "configuratorUpdateNotice": {
        "message": "You are using an outdated version of the <b>openLRSng Configurator</b>.<br>Version <b>$1</b> is available online, please visit <a href=\"$2\" target=\"_blank\">the release page</a> to download and install the latest version with fixes and improvements.<br>Please close the configurator window before updating."
    },
    "configuratorUpdateWebsite": {
        "message": "Go to Release Website"
    },

    "error_no_valid_port": {
        "message": "<span style=\"color: red\">No</span> serial port selected, please select <span style=\"color: green\">valid</span> serial port"
    },
    "error_connect_first": {
        "message": "You <span style=\"color: red\">can't</span> view this tab at the moment. You need to <span style=\"color: green\">connect</span> first"
    },
    "error_operation_in_progress": {
        "message": "You <span style=\"color: red\">can't</span> do this right now, please wait for current operation to finish"
    },
    "error_cannot_view_tx_tabs_while_connected_as_rx": {
        "message": "You <span style=\"color: red\">can't</span> view this tab because you are connected to an RX module"
    },
    "error_cannot_connect_while_in_firmware_flasher": {
        "message": "You <span style=\"color: red\">can't</span> connect to a module while you are in Firmware Flasher, please leave firmware flasher before connecting"
    },
    "error_failed_to_open_port": {
        "message": "<span style=\"color: red\">Failed</span> to open serial port"
    },
    "error_failed_to_close_port": {
        "message": "<span style=\"color: red\">Failed</span> to close serial port"
    },
    "error_failed_to_enter_binary_mode": {
        "message": "<span style=\"color: red\">Failed</span> to enter binary mode"
    },
    "error_no_startup_message": {
        "message": "Start message <span style=\"color: red\">not</span> received within 10 seconds, disconnecting"
    },
    "error_atmega32u4_regular_port_not_found": {
        "message": "Regular ATmega32u4 port <span style=\"color: red\">not</span> found, connecting <span style=\"color: red\">failed</span>"
    },
    "error_atmega32u4_programmer_port_not_found": {
        "message": "Programmer ATmega32u4 port <span style=\"color: red\">not</span> found, connecting <span style=\"color: red\">failed</span>"
    },
    "error_connecting_to_rx_to_configure": {
        "message": "Are you trying to connect directly to the RX to configure? <span style=\"color: red\">Don't</span> do that. Please re-read the manual, RX configuration is done <strong>wirelessly</strong> through the TX."
    },
    "error_no_psp_received": {
        "message": "Communication through Phoenix Serial Protocol was never established, connecting <span style=\"color: red\">failed</span>"
    },
    "error_psp_crc_failed": {
        "message": "Transmission CRC check for command: <strong>$1</strong> <span style=\"color: red\">failed</span>, re-connecting is advised"
    },
    "error_psp_unknown_code": {
        "message": "PSP - Unknown command: $1"
    },

    "serial_port_opened": {
        "message": "Serial port <span style=\"color: green\">successfully</span> opened with ID: $1"
    },
    "serial_port_closed": {
        "message": "Serial port <span style=\"color: green\">successfully</span> closed"
    },
    "serial_atmega32u4_reboot_sequence_started": {
        "message": "Running <strong>ATmega32u4</strong> reboot sequence"
    },
    "request_to_enter_bind_mode": {
        "message": "Requesting to enter bind mode"
    },
    "module_sent": {
        "message": "Module - $1"
    },

    "bind_data_received": {
        "message": "Transmitter BIND data <span style=\"color: green\">received</span>"
    },
    "receiver_config_data_received": {
        "message": "Receiver module config data <span style=\"color: green\">received</span>"
    },
    "transmitter_firmware_version": {
        "message": "Transmitter Firmware version - <strong>$1</strong>"
    },
    "running_in_compatibility_mode": {
        "message": "Configurator is running in compatibility mode, you will have to <strong>update</strong> your firmware to the latest version before trying to save any of of the settings"
    },
    "firmware_not_supported": {
        "message": "Firmware version <span style=\"color: red\">not supported</span>, please update to a more recention version"
    },
    "receiver_failsafe_data_received": {
        "message": "Failsafe data <span style=\"color: green\">received</span>"
    },
    "receiver_failsafe_data_not_saved_yet": {
        "message": "Failsafe wasn't saved yet, populating UI with defaults"
    },
    "transmitter_eeprom_save_ok": {
        "message": "Transmitter module EEPROM save <span style=\"color: green\">successful</span>"
    },
    "transmitter_eeprom_save_fail": {
        "message": "Transmitter module EEPROM save <span style=\"color: red\">failed</span>"
    },
    "receiver_eeprom_save_ok": {
        "message": "Receiver module EEPROM save <span style=\"color: green\">successful</span>"
    },
    "receiver_eeprom_save_fail": {
        "message": "Receiver module EEPROM save <span style=\"color: red\">failed</span>"
    },
    "transmitter_configuration_restored": {
        "message": "Configuration data for transmitter module was <span style=\"color: green\">restored</span> to default"
    },
    "receiver_configuration_restored": {
        "message": "Configuration data for receiver module was <span style=\"color: green\">restored</span> to default"
    },
    "receiver_failsafe_data_save_ok": {
        "message": "Receiver module Failsafe values save <span style=\"color: green\">successful</span>"
    },
    "receiver_failsafe_data_save_fail": {
        "message": "Receiver module Failsafe values save <span style=\"color: red\">failed</span>"
    },
    "transmitter_bind_data_sent_ok": {
        "message": "Transmitter BIND data was <span style=\"color: green\">accepted</span> by the module"
    },
    "transmitter_bind_data_sent_fail": {
        "message": "Transmitter BIND data was <span style=\"color: red\">rejected</span> by the module"
    },
    "receiver_config_data_sent_ok": {
        "message": "Receiver CONFIG was <span style=\"color: green\">accepted</span> by the module."
    },
    "receiver_config_data_sent_fail": {
        "message": "Receiver CONFIG was <span style=\"color: red\">rejected</span> by the module."
    },

    "saving_configuration_to": {
        "message": "Saving configuration to: <strong>$1</strong>"
    },
    "reading_configuration_from": {
        "message": "Reading configuration from: <strong>$1</strong>"
    },
    "restore_configuration_file_invalid": {
        "message": "File provided <span style=\"color: red\">is not</span> valid configuration file"
    },

    "please_grant_usb_permissions": {
        "message": "Please click on <strong>\"Request Optional Permissions\"</strong> button to grant application <strong style=\"color: red\">required</strong> <strong>USB</strong> access"
    },
    "usb_permissions_granted": {
        "message": "Optional <strong>USB</strong> permissions <strong style=\"color: green\">granted</strong>"
    },

    "stk500_timed_out": {
        "message": "STK500 - Timed out, programming <span style=\"color: red\">failed</span>"
    },
    "stk500_connection_failed": {
        "message": "Connection to the module <span style=\"color: red\">failed</span>"
    },
    "stk500_chip_recognized_as": {
        "message": "Chip recognized as $1"
    },
    "stk500_chip_not_supported": {
        "message": "Chip not supported, sorry :-("
    },
    "stk500_hex_too_big": {
        "message": "Supplied hex is bigger then flash available on the chip, HEX: $1 bytes, limit = $2 bytes"
    },
    "stk500_communication_failed": {
        "message": "STK500 - Communication <span style=\"color: red\">Failed</span>"
    },
    "stk500_erasing_eeprom": {
        "message": "Erasing EEPROM"
    },
    "stk500_writing_to_flash": {
        "message": "Writing to flash"
    },
    "stk500_verifying_flash": {
        "message": "Verifying flash"
    },
    "stk500_verify_ok": {
        "message": "Verifying <span style=\"color: green\">done</span>"
    },
    "stk500_verify_fail": {
        "message": "Verifying <span style=\"color: red\">failed</span>"
    },
    "stk500_programming_ok": {
        "message": "Programming: <span style=\"color: green\">SUCCESSFUL</span>"
    },
    "stk500_programming_fail": {
        "message": "Programming: <span style=\"color: red\">FAILED</span>"
    },

    "avr109_waiting_for_programming_port": {
        "message": "AVR109 - Waiting for programming port to connect"
    },
    "avr109_new_port_found": {
        "message": "AVR109 - New port found: <strong>$1</strong>"
    },
    "avr109_new_port_not_found": {
        "message": "AVR109 - Port not found within 8 seconds"
    },
    "avr109_upload_failed": {
        "message": "AVR109 - Upload <span style=\"color: red\">failed</span>"
    },
    "avr109_timed_out": {
        "message": "AVR109 - Timed out, programming <span style=\"color: red\">failed</span>"
    },
    "avr109_chip_recognized_as": {
        "message": "Chip recognized as $1"
    },
    "avr109_chip_not_supported": {
        "message": "Chip not supported, sorry :-("
    },
    "avr109_hex_too_big": {
        "message": "Supplied hex is bigger then flash available on the chip, HEX: $1 bytes, limit = $2 bytes"
    },
    "avr109_communication_failed": {
        "message": "AVR109 - Communication <span style=\"color: red\">Failed</span>"
    },
    "avr109_erasing_eeprom": {
        "message": "Erasing EEPROM"
    },
    "avr109_writing_to_flash": {
        "message": "Writing to flash"
    },
    "avr109_verifying_flash": {
        "message": "Verifying flash"
    },
    "avr109_verify_ok": {
        "message": "Verifying <span style=\"color: green\">done</span>"
    },
    "avr109_verify_fail": {
        "message": "Verifying <span style=\"color: red\">failed</span>"
    },
    "avr109_programming_ok": {
        "message": "Programming: <span style=\"color: green\">SUCCESSFUL</span>"
    },
    "avr109_programming_fail": {
        "message": "Programming: <span style=\"color: red\">FAILED</span>"
    },

    "about_donate_text": {
        "message": "If you found the utility useful, please consider <strong>supporting</strong> its development by donating.<br />"
    },
    "about_application_built_with_text": {
        "message": "This application was built using web technologies - xhtml / css / javascript"
    },
    "about_back_button": {
        "message": "Back"
    },

    "default_optional_permissions_head": {
        "message": "Optional USB Permissions"
    },
    "default_optional_permissions_text": {
        "message": "Due to the nature of arduino leonardo bootloader design, Configurator <strong style=\"color: red\">requires</strong> additional USB permissions to be able to restart <strong>ATmega32u4</strong> based hardware.<br />"
    },
    "default_request_optional_permissions": {
        "message": "Request Optional Permissions"
    },
    "default_voltage_warning_head": {
        "message": "Voltage Warning"
    },
    "default_voltage_warning_text": {
        "message": "Please note that only certain <strong>openLRS</strong> units can operate with <strong style=\"color: red\">5V USB-serial adapter</strong>.<br />It is strongly suggested to always use <strong style=\"color: green\">3.3V USB-serial adapter</strong>.<br /><br /><strong style=\"color: red\">Permanent damage</strong> is caused <strong>immediately</strong> by powering non compatible units with <strong style=\"color: red\">5V</strong>.<br />"
    },
    "default_open_source_head": {
        "message": "Open Source / Donation Notice"
    },
    "default_open_source_text": {
        "message": "This utility is fully <strong>open source</strong> and is available free of charge to all <strong>openLRSng</strong> users.<br />If you found the utility useful, please consider <strong>supporting</strong> its development by donating.<br />"
    },
    "default_firmware_flasher_button": {
        "message": "Firmware Flasher"
    },
    "default_firmware_changelog_head": {
        "message": "Firmware - Changelog"
    },
    "default_configurator_changelog_head": {
        "message": "Configurator - Changelog"
    },

    "firmware_uploader_auto_update": {
        "message": "Auto Update"
    },
    "firmware_uploader_tx_module": {
        "message": "TX Module"
    },
    "firmware_uploader_rx_module": {
        "message": "RX Module"
    },
    "firmware_uploader_board_not_selected": {
        "message": "Board not selected"
    },
    "firmware_uploader_embedded_firmware": {
        "message": "Embedded Firmware"
    },
    "firmware_uploader_depends_on_the_module": {
        "message": "Depends on the module"
    },
    "firmware_uploader_custom_firmware": {
        "message": "Custom Firmware"
    },
    "firmware_uploader_firmware_corrupted": {
        "message": "Firmware Corrupted"
    },
    "firmware_uploader_unknown": {
        "message": "Unknown"
    },
    "firmware_uploader_type": {
        "message": "Type:"
    },
    "firmware_uploader_version": {
        "message": "Version:"
    },
    "firmware_uploader_size": {
        "message": "Size:"
    },
    "firmware_uploader_file_limit_exceeded": {
        "message": "File limit (1 MB) <span style=\"color: red\">exceeded</span>, aborting"
    },
    "firmware_uploader_hex_file_corrupted": {
        "message": "HEX file appears to be <span style=\"color: red\">corrupted</span>"
    },
    "firmware_uploader_can_not_flash_corrupted_firmware": {
        "message": "Can not flash <span style=\"color: red\">corrupted</span> firmware, please select different HEX file or re-select board to load embedded firmware"
    },
    "firmware_uploader_no_startup_message_received": {
        "message": "Startup message not received withing 10 seconds, Auto Update <span style=\"color: red\">failed</span>"
    },
    "firmware_uploader_updating": {
        "message": "Updating"
    },
    "firmware_uploader_already_running_latest_firmware": {
        "message": "You are already running the <strong>latest</strong> firmware"
    },
    "firmware_uploader_select_version_head": {
        "message": "Select Firmware Version"
    },
    "firmware_uploader_show_development_releases": {
        "message": "Show unstable versions"
    },
    "firmware_uploader_load_remote_file": {
        "message": "Load Firmware from Internet"
    },
    "firmware_uploader_select_board_head": {
        "message": "Select Board"
    },
    "firmware_uploader_instructions_head": {
        "message": "Instructions"
    },
    "firmware_uploader_firmware_info_head": {
        "message": "Firmware Info"
    },
    "firmware_uploader_flashing_custom_head": {
        "message": "Flashing Custom Firmware"
    },
    "firmware_uploader_firmware_uploader_instructions_text": {
        "message": "1. Connect your <strong>TX</strong> or <strong>RX</strong> module via usb to serial dongle to the computer (<strong>with DTR</strong>)<br />2. Selected desired firmware for your module<br />3. Press \"<strong>Flash Firmware</strong>\" and wait for process to finish<br />4. You are <span style=\"color: green\">done</span><br /><br />Note: <strong>Auto-Connect</strong> and <strong>Connect</strong> button is <strong>always</strong> <span style=\"color: red\">disabled</span> in firmware flasher."
    },
    "firmware_uploader_firmware_uploader_flashing_custom_text": {
        "message": "1. <strong>Select Board</strong><br />2. Click on <strong>Load Custom Firmware</strong> button<br />3. <strong>Firmware Info</strong> should display general info about custom firmware (type / size)<br />4. Click on <strong>Flash Firmware</strong> button<br /><br />Note: Custom Firmware can <strong>only</strong> be flashed when specific board/module is selected"
    },
    "firmware_uploader_erase_eeprom": {
        "message": "Erase EEPROM ?"
    },
    "firmware_uploader_flash_firmware": {
        "message": "Flash Firmware"
    },
    "firmware_uploader_load_custom_firmware": {
        "message": "Load Custom Firmware"
    },
    "firmware_uploader_leave_button": {
        "message": "Leave Firmware Flasher"
    },

    "options_title": {
        "message": "Application Options"
    },
    "options_disable_quickjoin": {
        "message": "Disable \"quickjoin\" <strong>[not recommended]</strong>",
        "description": "This feature is recommended to be enabled at all times"
    },
    "options_receive_app_notifications": {
        "message": "Receive desktop <strong>notification</strong> when application updates"
    },
    "options_improve_configurator": {
        "message": "Send <strong>anonymous</strong> usage data to the developer team"
    },

    "rx_module_note_text": {
        "message": "Receiver tries to connect on startup for <strong>0.5 second</strong>, if this fails try <strong>bridging</strong> Port-1 and Port-2 on your receiver with a jumper.<br />"
    },
    "rx_module_please_wait": {
        "message": "Please <strong>wait</strong> for the <strong>TX module</strong> to establish connection with the <strong>RX module</strong>."
    },
    "rx_module_retry": {
        "message": "Retry ?"
    },

    "rx_failsafe_channels_1_8": {
        "message": "Failsafe Channels 1 - 8"
    },
    "rx_failsafe_channels_9_16": {
        "message": "Failsafe Channels 9 - 16"
    },
    "rx_failsafe_info_head": {
        "message": "Info"
    },
    "rx_failsafe_checkbox_enable_failsafe": {
        "message": "Enable failsafe for this channel"
    },
    "rx_failsafe_checkbox_lock_failsafe": {
        "message": "Lock failsafe value for this channel (pressing failsafe button on the module won't overwrite the value)"
    },
    "rx_failsafe_head_name": {
        "message": "Name"
    },
    "rx_failsafe_head_us": {
        "message": "(us)"
    },
    "rx_failsafe_head_set": {
        "message": "Set"
    },
    "rx_failsafe_head_lock": {
        "message": "Lock"
    },
    "rx_failsafe_info_text": {
        "message": "Failsafe values have <strong>non-uniform</strong> resolution: 800 - 1000 = 16 us / 1000 - 2000 = 1 us / 2000 - 2200 = 16 us<br /><br /><strong>Set</strong> - enable failsafe on channel, unset channels will retain last state<br /><strong>Lock</strong> - prevent changing failsafe info by TX unit F/S button"
    },
    "rx_failsafe_back": {
        "message": "Back"
    },
    "rx_failsafe_info_save_to_eeprom": {
        "message": "Save to EEPROM"
    },

    "rx_module_try_to_establish_connection": {
        "message": "Trying to establish connection with the RX module"
    },
    "rx_module_connection_established_ok": {
        "message": "Connection to the receiver module <span style=\"color: green\">successfully</span> established"
    },
    "rx_module_connection_timed_out": {
        "message": "Connection to the RX module timed out"
    },
    "rx_module_connection_timed_out_retrying": {
        "message": "Connection to the RX module timed out, retrying"
    },
    "rx_module_faulty_response": {
        "message": "Failed response from the RX module"
    },
    "rx_module_connection_request_canceled": {
        "message": "Connection request to the RX module was canceled"
    },
    "rx_module_configuration_saved": {
        "message": "Configuration was saved <span style=\"color: green\">successfully</span>"
    },
    "rx_module_configuration_restored": {
        "message": "Configuration <span style=\"color: green\">successfully</span> restored from file"
    },
    "rx_module_data_structure_invalid": {
        "message": "Data structure <span style=\"color: red\">invalid</span> (backup file was probably generated for <strong>older</strong> version of configurator)"
    },
    "rx_module_backup_file_generated_on": {
        "message": "Backup file generated on configurator version: <strong>$1</strong>, FW: <strong>$2</strong>"
    },
    "rx_module_current_configurator_version": {
        "message": "Current configurator version: <strong>$1</strong>, FW: <strong>$2</strong>"
    },
    "rx_module_incorrect_data_structure": {
        "message": "<span style=\"color: red\">Incorrect / Corrupted</span> data structure detected"
    },
    "rx_module_validation_failed_message_1": {
        "message": "One or more fields didn't pass the validation process, they should be highligted with <span style=\"color: red\">red</span> border"
    },
    "rx_module_validation_failed_message_2": {
        "message": "Please try to enter appropriate value, otherwise you <span style=\"color: red\">won't</span> be able to save settings in EEPROM"
    },
    "rx_module_basic_settings_head": {
        "message": "Basic Settings"
    },
    "rx_module_failsafe_settings_head": {
        "message": "Failsafe Settings"
    },
    "rx_module_channel_output_head": {
        "message": "Channel Output"
    },
    "rx_module_info_head": {
        "message": "Info"
    },
    "rx_module_beacon_settings_head": {
        "message": "Beacon Settings"
    },
    "rx_module_minimum_ppm_sync": {
        "message": "Minimum PPM sync time (&#181;s)"
    },
    "rx_module_inject_rssi": {
        "message": "Inject RSSI on servo channel"
    },
    "rx_module_always_bind_on_startup": {
        "message": "Always bind on startup"
    },
    "rx_module_always_bind_on_startup_title": {
        "message": "If you disable this function, you have to use jumper to bridge port 1 and 2 to re-enter this menu or to bind again"
    },
    "rx_module_limit_ppm_to_8": {
        "message": "Limit PPM output to 8 channels"
    },
    "rx_module_enable_slave_mode": {
        "message": "Enable slave mode"
    },
    "rx_module_immediate_output": {
        "message": "Immediate output"
    },
    "rx_module_immediate_output_title": {
        "message": "Instantly output PWM/PPM (before link is established), failsafe needs to be set"
    },
    "rx_module_static_beacon": {
        "message": "Static beacon"
    },
    "rx_module_static_beacon_title": {
        "message": "Emit single tone at full power instead of fading tune."
    },
    "rx_module_failsafe_delay": {
        "message": "Failsafe delay"
    },
    "rx_module_stop_pwm_on_failsafe": {
        "message": "Stop PWM on failsafe"
    },
    "rx_module_stop_ppn_on_failsafe": {
        "message": "Stop PPM on failsafe"
    },
    "rx_module_beacon_frequency": {
        "message": "Beacon frequency (Hz)"
    },
    "rx_module_beacon_interval": {
        "message": "Beacon interval"
    },
    "rx_module_beacon_deadtime": {
        "message": "Beacon deadtime"
    },
    "rx_module_button_backup_configuration": {
        "message": "Backup this Configuration"
    },
    "rx_module_button_restore_from_file": {
        "message": "Restore from File"
    },
    "rx_module_button_edit_failsafe_values": {
        "message": "Edit Failsafe Values"
    },
    "rx_module_button_restore_default": {
        "message": "Restore Default"
    },
    "rx_module_button_save_to_eeprom": {
        "message": "Save to EEPROM"
    },
    "rx_module_yes": {
        "message": "Yes"
    },
    "rx_module_no": {
        "message": "No"
    },
    "rx_module_enabled": {
        "message": "Enabled"
    },
    "rx_module_disabled": {
        "message": "Disabled"
    },
    "rx_module_board": {
        "message": "Board"
    },
    "rx_module_watchdog": {
        "message": "Watchdog"
    },
    "rx_module_watchdog_title": {
        "message": "Watchdog is enabled automatically when using optiboot as bootloader"
    },
    "rx_module_unknown": {
        "message": "Unknown"
    },

    "signal_monitor_data_ok": {
        "message": "Signal: OK"
    },
    "signal_monitor_data_bad": {
        "message": "Signal: Bad"
    },
    "signal_monitor_info": {
        "message": "This screen will display channel values from PPM input if valid PPM data is received, Spektrum/SBUS/SUMD cannot be monitored."
    },
    "signal_monitor_off": {
        "message": "OFF"
    },
    "signal_monitor_ppm_settings_head": {
        "message": "PPM Input Settings"
    },
    "signal_monitor_ppm_in_inverted": {
        "message": "Inverted"
    },
    "signal_monitor_ppm_in_micro": {
        "message": "Micro"
    },
    "signal_monitor_min_channels_on_input": {
        "message": "Minimum channels"
    },
    "signal_monitor_head_input": {
        "message": "Input"
    },
    "signal_monitor_head_output": {
        "message": "Output"
    },
    "signal_monitor_head_value": {
        "message": "Value"
    },
    "signal_monitor_channel": {
        "message": "Channel - $1"
    },
    "signal_monitor_analog": {
        "message": "ANALOG - $1"
    },
    "signal_monitor_modesw": {
        "message": "Mode Switch"
    },
    "signal_monitor_static": {
        "message": "Static $1"
    },
    "signal_monitor_button_save_to_eeprom": {
        "message": "Save to EEPROM"
    },

    "spectrum_analyzer_resume": {
        "message": "Resume"
    },
    "spectrum_analyzer_pause": {
        "message": "Pause"
    },
    "spectrum_analyzer_disable_reference": {
        "message": "Disable Reference"
    },
    "spectrum_analyzer_enable_reference": {
        "message": "Enable Reference"
    },
    "spectrum_analyzer_hide_hop_channels": {
        "message": "Hide Hop Channels"
    },
    "spectrum_analyzer_display_hop_channels": {
        "message": "Display Hop Channels"
    },
    "spectrum_analyzer_start_frequency": {
        "message": "Start Frequency (MHz):"
    },
    "spectrum_analyzer_stop_frequency": {
        "message": "Stop Frequency (MHz):"
    },
    "spectrum_analyzer_average_samples": {
        "message": "Average samples:"
    },
    "spectrum_analyzer_step_size": {
        "message": "Step size (kHz):"
    },
    "spectrum_analyzer_graph_type": {
        "message": "Graph type:"
    },
    "spectrum_analyzer_graph_units": {
        "message": "Graph units:"
    },
    "spectrum_analyzer_area": {
        "message": "area"
    },
    "spectrum_analyzer_lines": {
        "message": "lines"
    },
    "spectrum_analyzer_rssi": {
        "message": "RSSI"
    },
    "spectrum_analyzer_dbm": {
        "message": "dBm"
    },
    "spectrum_analyzer_overtime_averaging": {
        "message": "Overtime Avr.:"
    },
    "spectrum_analyzer_high": {
        "message": "High"
    },
    "spectrum_analyzer_average": {
        "message": "Average"
    },
    "spectrum_analyzer_low": {
        "message": "Low"
    },
    "spectrum_analyzer_reference": {
        "message": "Reference"
    },
    "spectrum_analyzer_hop_channel": {
        "message": "Hop Channel"
    },
    "spectrum_analyzer_highest_peak_detected": {
        "message": "Highest peak detected at"
    },
    "spectrum_analyzer_calculating": {
        "message": "Calculating ..."
    },
    "spectrum_analyzer_button_display_hop_channels": {
        "message": "Display Hop Channels"
    },
    "spectrum_analyzer_button_save_reference": {
        "message": "Save Reference"
    },
    "spectrum_analyzer_button_pause": {
        "message": "Pause"
    },

    "troubleshooting_click_to_expand": {
        "message": "[click to expand]"
    },
    "troubleshooting_click_to_collapse": {
        "message": "[click to collapse]"
    },
    "troubleshooting_button_online_wiki": {
        "message": "Online Wiki"
    },
    "troubleshooting_button_report_firmware_bug": {
        "message": "Report Firmware Bug"
    },
    "troubleshooting_button_report_configurator_bug": {
        "message": "Report Configurator Bug"
    },
    "troubleshooting_head_1": {
        "message": "Operating system related information"
    },
    "troubleshooting_text_1": {
        "message": "<div style=\"margin-bottom: 10px\"><strong>Windows (XP/Vista/7/8/8.1)</strong><br />Software is fully <span style=\"color: green\">compatible</span>. <br /></div><div style=\"margin-bottom: 10px\"><strong>Linux</strong><br /><strong>1.</strong> You need to add yourself to \"dialout\" group to allow chrome/chromium serial port access.<br /><span style=\"color: green\">FIX:</span> You can do so by executing: <strong>sudo usermod -aG dialout YOUR_USERNAME</strong>, relog or reboot is required afterwards.<br /></div><div style=\"margin-bottom: 10px\"><strong>Mac OS</strong><br />Software wasn't fully tested on this platform.</div><div><strong>Chrome OS</strong><br />Software wasn't fully tested on this platform.</div>"
    },
    "troubleshooting_head_2": {
        "message": "Deluxe TX related information"
    },
    "troubleshooting_text_2": {
        "message": "Deluxe TX is based on <strong>Atmega32u4</strong> chip, which have usb support directly on the chip (no serial to usb dongle required).<br /><br />Because of this hardware \"setup\" configurator <span style=\"color: red\">requires</span> optional <strong>USB</strong> permissions to restart the module before connecting.<br />This means, that you <span style=\"color: red\">won't</span> be able to connect to this module unless you <span style=\"color: green\">allow</span> configurator to access <strong>USB</strong> devices.<br />"
    },
    "troubleshooting_head_3": {
        "message": "Installing and using old versions of configurator"
    },
    "troubleshooting_text_3": {
        "message": "<strong>openLRSng - configurator</strong> installed from <strong>google store</strong> auto-updates when new version is released (there is no way around it).<br />In some cases bugfixes and newly implemented features <span style=\"color: red\">break</span> backwards compatibility, however there might be cases when you would like to stay on an older version.<br /><br />1. <a href=\"https://github.com/openLRSng/openLRSng-configurator/releases\" target=\"_blank\">openLRSng - configurator releases</a> - download older configurator version (you can view embedded firmware version by clicking on \"<strong>...</strong>\"<br />2. unzip downloaded zipfile<br />3. in google chrome, go to \"tools -> extensions\"<br />4. check the \"<strong>Developer mode</strong>\" checkbox<br />5. click on \"<strong>Load unpacked extension</strong>\" and load the unzipped folder<br />"
    },
    "troubleshooting_button_back": {
        "message": "Back"
    },

    "tx_module_hopchannel_title": {
        "message": "Hop $1 - Channel $2 - $3 kHz"
    },
    "tx_module_validation_failed_line_1": {
        "message": "One or more fields didn't pass the validation process, they should be highligted with <span style=\"color: red\">red</span> border"
    },
    "tx_module_validation_failed_line_2": {
        "message": "Please try to enter appropriate value, otherwise you <span style=\"color: red\">won't</span> be able to save settings in EEPROM"
    },
    "tx_module_requesting_profile": {
        "message": "Requesting Profile: <strong>$1</strong>"
    },
    "tx_module_selecting_profile": {
        "message": "Selecting Profile: <strong>$1</strong>"
    },
    "tx_module_uploading_profile": {
        "message": "Uploading Profile: <strong>$1</strong>"
    },
    "tx_module_configuration_restored_from_file": {
        "message": "Configuration <span style=\"color: green\">successfully</span> restored from file"
    },
    "tx_module_data_structure_invalid": {
        "message": "Data structure <span style=\"color: red\">invalid</span> (backup file was probably generated for <strong>older</strong> version of configurator)"
    },
    "tx_module_backup_generated_on": {
        "message": "Backup file generated on configurator version: <strong>$1</strong>, FW: <strong>$2</strong>"
    },
    "tx_module_current_configurator_version": {
        "message": "Current configurator version: <strong>$1</strong>, FW: <strong>$2</strong>"
    },
    "tx_module_data_corrupted": {
        "message": "<span style=\"color: red\">Incorrect / Corrupted</span> data structure detected"
    },
    "tx_module_configuration_saved": {
        "message": "Configuration was saved <span style=\"color: green\">successfully</span>"
    },
    "tx_module_basic_settings_head": {
        "message": "Basic Settings"
    },
    "tx_module_advanced_settings_head": {
        "message": "Advanced Settings"
    },
    "tx_module_info_head": {
        "message": "Info"
    },
    "tx_module_hop_channels_head": {
        "message": "Hop Channels"
    },
    "tx_module_default_profile": {
        "message": "Profile to use"
    },
    "tx_module_default_profile_updated": {
        "message": "Default profile updated"
    },
    "tx_module_profile_1_4": {
        "message": "Profile (1 - 4)"
    },
    "tx_module_clone_settings": {
        "message": "Clone Settings"
    },
    "tx_module_clone_title": {
        "message": "Clone settings in this profile to all profiles (overwrites previous settings)"
    },
    "tx_module_operating_frequency": {
        "message": "Operating Frequency (kHz)"
    },
    "tx_module_rf_power": {
        "message": "RF Power (0 - 7 / min - max)"
    },
    "tx_module_channel_spacing": {
        "message": "Channel Spacing (5 - 25) (x 10 kHZ)"
    },
    "tx_module_serial_baudrate": {
        "message": "Serial Baudrate (bps)"
    },
    "tx_module_data_rate": {
        "message": "Data Rate (bps)"
    },
    "tx_module_telemetry_selection": {
        "message": "Telemetry (no/yes/FrSky/smartPort)"
    },
    "tx_module_rc_output_configuration": {
        "message": "RC output configuration (4-16)"
    },
    "tx_module_4channels_4switches": {
        "message": "4 channels + 4 switches"
    },
    "tx_module_8channels": {
        "message": "8 channels"
    },
    "tx_module_8channels_4switches": {
        "message": "8 channels + 4 switches"
    },
    "tx_module_12channels": {
        "message": "12 channels"
    },
    "tx_module_12channels_4switches": {
        "message": "12 channels + 4 switches"
    },
    "tx_module_16channels": {
        "message": "16 channels"
    },
    "tx_module_number_of_hop_channels": {
        "message": "Number of Hop channels (1-24)"
    },
    "tx_module_maximum_desired_frequency": {
        "message": "Maximum desired frequency (kHz)"
    },
    "tx_module_enable_diversity": {
        "message": "Enable diversity"
    },
    "tx_module_enable_diversity_title": {
        "message": "Enable antenna diversity with capable RX"
    },
    "tx_module_mute_buzzer": {
        "message": "Mute buzzer (mostly)"
    },
    "tx_module_mute_buzzer_title": {
        "message": "Buzzer stays quiet (no beep) on telemetry packet loss"
    },
    "tx_module_alt_power": {
        "message": "Alternating power"
    },
    "tx_module_alt_power_title": {
        "message": "Send every N:th packet with lower power"
    },
    "tx_module_sw_power": {
        "message": "Power boost by switch"
    },
    "tx_module_sw_power_title": {
        "message": "Allow forcing full power by toggiling switch on TX"
    },
    "tx_module_maximum_frequency": {
        "message": "Maximum Frequency"
    },
    "tx_module_rfm_type": {
        "message": "RFM Type"
    },
    "tx_module_watchdog": {
        "message": "Watchdog"
    },
    "tx_module_watchdog_title": {
        "message": "Watchdog is enabled automatically when using optiboot as bootloader"
    },
    "tx_module_enabled": {
        "message": "Enabled"
    },
    "tx_module_disabled": {
        "message": "Disabled"
    },
    "tx_module_bind_code": {
        "message": "Bind Code"
    },
    "tx_module_bind_code_title": {
        "message": "Automatically change Bind Code when saving configuration to EEPROM. Re-Bind of RX unit is still necessary"
    },
    "tx_module_refresh_rate": {
        "message": "Refresh Rate"
    },
    "tx_module_packet_interval": {
        "message": "Packet Interval"
    },
    "tx_module_button_randomize": {
        "message": "Randomize"
    },
    "tx_module_button_randomize_title": {
        "message": "Randomize Hop Channels"
    },
    "tx_module_button_backup_this_profile": {
        "message": "Backup this Profile"
    },
    "tx_module_button_backup_all_profiles": {
        "message": "Backup all Profiles"
    },
    "tx_module_button_restore_from_file": {
        "message": "Restore from File"
    },
    "tx_module_button_restore_default": {
        "message": "Restore Default"
    },
    "tx_module_button_save_to_eeprom": {
        "message": "Save to EEPROM"
    },
    "tx_module_57600_experimental": {
        "message": "57600 - experimental"
    },
    "tx_module_125000_experimental": {
        "message": "125000- experimental"
    },
    "tx_module_no": {
        "message": "No"
    },
    "tx_module_yes": {
        "message": "Yes"
    },
    "tx_module_yes_frsky": {
        "message": "Yes - FrSky"
    },
    "tx_module_yes_smartport": {
        "message": "Yes - smartPort"
    },

    "notifications_app_just_updated_to_version": {
        "message": "Application just updated to version: $1"
    },
    "notifications_click_here_to_start_app": {
        "message": "Click here to start the application"
    }
}
